function getOwnerOfHex(hex)
    -- Returns the color of the owner of a given hex

    -- Gets the hex if a GUID was supplied
    hex = getObject(hex)

    -- Error checking to make sure the hex is valid
    verify_hex(hex)

    local discs = castBoxAndCheck(hex, nil, 'Influence')

    -- More error checking
    if discs == nil then return nil end
    if #discs > 1 then
        broadcastToAll('Error getting the owner of hex ['..
            tostring(hex.getVar('number')) .. ']\n' ..
            'There are multiple influence discs on the hex!', Color.Yellow)
    end

    -- Get the owner of the disc from its color
    if verify_influence_disc(discs[1]) then
        local c = discs[1].getColorTint()
        return c:toString()
    else
        return nil
    end
end

function getControlledHexes(color)
    local table_objects = getInfluenceDiscsOnHexes()
    local owned_hexes = {}

    for _, disc in ipairs(table_objects) do
        -- Get the owner of the disc from its color
        local c = disc.getColorTint()
        c = c:toString()

        if c == color then
            -- Get the hex under the influence disc
            local hex = castAndCheckForTag(disc.getPosition(), 'hex')
            if hex ~= nil then
                owned_hexes[hex] = true
            end
        end
    end

    return owned_hexes
end

function getCurrentRound()
    local round = tonumber(RoundMarker.getDescription())
    return round
end

function getInfluenceDiscsOnHexes()
    local discs = getItemsInZone{zone   = TableZone,
                                 name   = 'Influence Disc',
                                 tag    = 'Influence'}
    local results = {}

    for _, disc in ipairs(discs) do
        if verify_influence_disc(disc) then
            table.insert(results, disc)
        end
    end

    return results
end

function getObjectsInRepZone(board, name, tag)
    -- Returns  objects in the reputation zone on a player board with the gvien
    -- name or tag

    local castResult = Physics.cast({
        origin = board.positionToWorld(vector(-1.627953, 0.2093751, 0.3211277)) + vector(0,-2,0),
        direction= vector(0,1,0),
        type = 3,
        size = vector(2,1,9),
        orientation  = vector(0,1,0),
        max_distance = 4,
        debug = DEBUG,})

    return objectsHitByCast(castResult, name, tag)
end
