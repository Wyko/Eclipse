function showButtons(player, value, id)
   if shown.buttons == false then
      UI.show("buttons")
      shown.buttons = true
      UI.setAttribute("showButtons", "text", "▲")
   else
      UI.hide("buttons")
      shown.buttons = false
      UI.setAttribute("showButtons", "text", "▼")
   end
end

function onLoad_Camera()
        UI.hide("buttons")
        shown.buttons = false
        UI.setAttribute("showButtons", "text", "▼")
end

function cameraControls(player, value, id)
   if id == "showCamControls" then
      showForPlayer({panel = "CameraControl", color = player.color})
   end
end

function cameraPosition(player, button)
   local color
   color = player.color
   if button == "1" then
     lookAtPlayer(player, color, 1)
  elseif button == "2" then
     lookAtPlayer(player, color, 2)
  elseif button == "3" then
     lookAtPlayer(player, color, 3)
  elseif button == "4" then
      lookAtPlayer(player, color, 4)
  elseif button == "5" then
     lookAtPlayer(player, color, 5)
 elseif button == "6" then
    lookAtPlayer(player, color, 6)
  elseif button == "showTech" then
      Player[color].lookAt({
         position = {x = 38, y = 0, z = 12},
         pitch = 65,
         yaw = 90,
         distance = 20,
      })
  elseif button == "showUpgrades" then
      Player[color].lookAt({
         position = {x = 38, y = 0, z = -7.5},
         pitch = 65,
         yaw = 90,
         distance = 20,
      })
  elseif button == "showMap" then
       lookAtMap(player, color)
   end
end

function lookAtPlayer(player, color, number)
    local playerOffset = _FactionHelper.getPlayerOffsets()
    local playerCount = _ZoneHelper.getPlayerCount()

    if (number > playerCount) then
        return
    end

    local colorToLookAt = _ZoneHelper.getZones()[number].color
    local x = playerOffset[playerCount][colorToLookAt].center.x
    local z = playerOffset[playerCount][colorToLookAt].center.z
    local rotation = playerOffset[playerCount][colorToLookAt].center.rotation

    if (rotation == 0) then
        rotation = rotation + 180
    else
        rotation = rotation -180
    end

    Player[color].lookAt({
       position = Vector(x,0,z),
       pitch = 65,
       yaw = rotation,
       distance = 40,
    })
end

function lookAtMap(player, color)
    local playerOffset = _FactionHelper.getPlayerOffsets()
    local playerCount = _ZoneHelper.getPlayerCount()
    local x = playerOffset[playerCount][color].homeSystem.x
    local z = playerOffset[playerCount][color].homeSystem.z
    local rotation = playerOffset[playerCount][color].homeSystem.rotation

    Player[color].lookAt({
       position = Vector(x,0,z),
       pitch = 65,
       yaw = rotation + 180,
       distance = 40,
    })
end

function showForPlayer(params)
   local panel = params.panel
   local color = params.color
   local opened = self.UI.getAttribute(panel, "visibility")
   if opened == nil then opened = "" end

   if opened:find(color) then
      opened = opened:gsub("|" .. color, "")
      opened = opened:gsub(color .. "|", "")
      opened = opened:gsub(color, "")
      self.UI.setAttribute(panel, "visibility", opened)
      if opened == "" then
         self.UI.setAttribute(panel, "active", "false")
         shown[panel] = false
      end
   else
      if shown[panel] ~= true then
         self.UI.setAttribute(panel, "active", "true")
         self.UI.setAttribute(panel, "visibility", color)
         shown[panel] = true
      else
         self.UI.setAttribute(panel, "visibility", opened .. "|" .. color)
      end
   end
end
