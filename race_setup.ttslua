function raceSetup(homeworld, color, race)
    if factions[race] == nil then
        broadcastToColor("Unfortunately, your race doesn't seem to be configured in this script yet. No setup automation is possible.", color)
        return false
    end
    placePopulations(homeworld, color, factions[race].types)
    spawnInfluenceDisc(homeworld.getPosition()+vector(0, 1, 0), color)
    placeStartingResources(color, race)
end

function placeHomeworld(homeworld, color)
    -- Moves the specified homeworld object to its correct location

    homeworld.setPosition(HomeworldLocations[color].position)
    homeworld.setRotation(HomeworldLocations[color].rotation)
    triggerFunctionIfResting(
        homeworld,
        function () homeworld.setLock(true) end)
end

function placeInfluenceOnHex(hex, color)
    -- Places the next available influence disc on the given hex

    log("Hex: ".. tostring(hex.getName()) .. ", Color: " .. tostring(color),
        'placeInfluenceOnHex')
    local disc = getNextUnusedInfluence(color)
    assert(disc ~= nil, "placeInfluenceOnHex: No disc found.")

    disc.setPositionSmooth(hex.getPosition()+vector(0, 1, 0), false, true)
end

function select_random_race(color)
    -- iterate over whole table to get all keys
    local keyset = {}
    local human_added = false
    for k in pairs(factions) do
        table.insert(keyset, k)
    end

    -- now you can reliably return a random key
    math.randomseed(os.time())
    i = math.random(1, #keyset)
    log('i = ['..i..']', 'select_random_race')
    random_race = keyset[i]

    -- Remove the button for that race
    getObjectFromGUID(factions[random_race].selector_button_GUID).destruct()

    params = {
      PlayerColor = color,
      FactionName = random_race
    }

    return basicSetup2(params)
end
