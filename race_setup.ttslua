function raceSetup(homeworld, color, race)
    if factions[race] == nil then
        broadcastToColor("Unfortunately, your race doesn't seem to be configured in this script yet. No setup automation is possible.", color)
        return false
    end
    placePopulations(homeworld, color, factions[race].types)
    spawnInfluenceDisc(homeworld.getPosition()+vector(0, 1, 0), color)
    placeStartingResources(color, race)
    placeOrbital(homeworld)
end

function placeOrbital(hex)
    -- Mainly for Exiles. Place an orbital

    local pos = hex.getTable('orbital')
    if pos == nil then return end

    orbitals_bag.takeObject({
        position          = hex.positionToWorld(pos),
        smooth            = true,
        callback_function = function (obj)
            triggerFunctionIfResting(obj, function () obj.setLock(true) end)
        end
    })
end

function placeHomeworld(homeworld, color)
    -- Moves the specified homeworld object to its correct location

    homeworld.setPosition(HomeworldLocations[color].position)
    homeworld.setRotation(HomeworldLocations[color].rotation)
    triggerFunctionIfResting(
        homeworld,
        function () homeworld.setLock(true) end)
end

function placeInfluenceOnHex(hex, color)
    -- Places the next available influence disc on the given hex

    log("Hex: ".. tostring(hex.getName()) .. ", Color: " .. tostring(color),
        'placeInfluenceOnHex')
    local disc = getNextUnusedInfluence(color)
    assert(disc ~= nil, "placeInfluenceOnHex: No disc found.")

    disc.setPositionSmooth(hex.getPosition()+vector(0, 1, 0), false, true)
end

function select_random_race(color)
    -- iterate over whole table to get all keys
    local keyset = {}
    local human_added = false
    for name, fac in pairs(factions) do
        if fac.available == true then
            if not string.find(name, "Terran") then
                table.insert(keyset, name)

            elseif (string.find(name, "Terran") and human_added == false) then
                human_added = true
                table.insert(keyset, name)
            end
        end
    end

    -- now you can reliably return a random key
    math.randomseed(os.time())
    i = math.random(tableLength(keyset))
    -- log('i = ['..i..']', 'select_random_race')
    random_race = keyset[i]
    printToAll(color .. ' has randomly selected '..random_race, color)
    -- Remove the button for that race
    getObjectFromGUID(factions[random_race].selector_button_GUID).destruct()

    params = {
      PlayerColor = color,
      FactionName = random_race
    }

    return basicSetup2(params)
end

function set_rota_availability(avail)
    for name, faction in pairs(factions) do
        if faction.is_rota then
            faction.available = avail
            log('Faction ['..name..'].available = ['..tostring(faction.available)..']')
        end
    end

end

function placeShips()

end
